apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'jetty'
mainClassName = 'it.binarybrain.tmp.PCA9685Tester'

repositories {
    mavenCentral()
}
dependencies {
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.17'
	compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
	compile 'org.apache.logging.log4j:log4j-core:2.2'
	compile 'org.apache.logging.log4j:log4j-api:2.2'
	compile 'org.slf4j:slf4j-log4j12:1.7.12'
        compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
        compile 'org.hibernate:hibernate-entitymanager:4.3.8.Final'
        compile 'org.hibernate:hibernate-c3p0:4.3.8.Final'
        compile 'com.h2database:h2:1.4.186'
}

//native build task
task buildLibrary (type:Exec) {
	commandLine 'make'
	args 'library'
	workingDir 'src/main/c++'
	doFirst{ println 'Compiling library...' }
	doLast{ println 'Native library compilation completed.' }
}
buildLibrary.dependsOn classes
build.dependsOn buildLibrary
run.dependsOn buildLibrary

//java.library.path specification, for finding native library
run {
	workingDir = 'build'
	systemProperty "java.library.path", "libs"
	systemProperty "log4j.configurationFile", "resources/main/log4j2.xml"
}

//execute servo tuner
task servotuner(type:JavaExec){
	workingDir = 'build'
	main = "it.binarybrain.hw.ServoTuner"
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	systemProperty "java.library.path", "libs"
	systemProperty "log4j.configurationFile", "resources/main/log4j2.xml"
}
